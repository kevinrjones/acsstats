@inherits AcsStatsWeb.Custom.BaseRazorPage<ResultsBattingModel>

@{
    ViewData["Title"] = Model.Title;
}

<h1>@Model.Title</h1>

<h2>@Model.Team v @Model.Opponents @Model.AtGroundName() @Model.GetHostCountry() (@Model.GetVenue()) (@Model.GetMatchType())</h2>

@if (Model.PlayerRecordDetails.Count == 0)
{
    <h3>No Matches</h3>
}
else
{
    var firstEntry = Model.PlayerRecordDetails[0];

    SetClasses();

    if (!Context.Request.Query.ContainsKey("sortorder"))
    {
        RunsClass = Model.SortDirection.ToUpper() == "ASC" ? "fas fa-arrow-down" : "fas fa-arrow-up";
    }


    <table class="table table-striped table-hover table-sm">
        <thead class="thead-dark">
        <tr>
            <th class="text-left">
                <a href="?@BaseUrl&sortorder=name" class="btn btn-link">Name <i class="@NameClass"></i></a>
            </th>
            <th class="text-left">
                <a href="?@BaseUrl&sortorder=played" class="btn btn-link">M <i class="@PlayedClass"></i></a>
            </th>
            <th class="text-left">
                <a href="?@BaseUrl&sortorder=innings" class="btn btn-link">I <i class="@InningsClass"></i></a>
            </th>
            <th class="text-right">NOs</th>
            <th class="text-right">
                <a href="?@BaseUrl&sortorder=runs" class="btn btn-link">Runs <i class="@RunsClass"></i></a>
            </th>
            <th class="text-right">
                <a href="?@BaseUrl&sortorder=hs" class="btn btn-link">HS <i class="@HSClass"></i></a>
            </th>
            <th class="text-right">
                <a href="?@BaseUrl&sortorder=avg" class="btn btn-link">Avg <i class="@AvgClass"></i></a>
            </th>
            <th class="text-right">
                <a href="?@BaseUrl&sortorder=hundreds" class="btn btn-link">100s <i class="@HundredsClass"></i></a>
            </th>
            <th class="text-right">
                <a href="?@BaseUrl&sortorder=fifties" class="btn btn-link">50s <i class="@FiftiesClass"></i></a>
            </th>
            <th class="text-right">
                <a href="?@BaseUrl&sortorder=ducks" class="btn btn-link">0s <i class="@DucksClass"></i></a>
            </th>
            <th class="text-right">
                <a href="?@BaseUrl&sortorder=fours" class="btn btn-link">4s <i class="@FoursClass"></i></a>
            </th>
            <th class="text-right">
                <a href="?@BaseUrl&sortorder=sixes" class="btn btn-link">6s <i class="@SixesClass"></i></a>
            </th>
            <th class="text-right">
                <a href="?@BaseUrl&sortorder=balls" class="btn btn-link">Balls <i class="@BallsClass"></i></a>
            </th>
            <th class="text-right">SR</th>
        </tr>
        </thead>
        <tbody>

        @{ const int maxLength = 40; }

        @foreach (var detail in Model.PlayerRecordDetails)
        {
            var hs = detail.Innings == null ? "-" :
                detail.NotOut ? $"{detail.HighestScore}*" : $"{detail.HighestScore}&nbsp;";

            var sr = "-";
            if (detail.Balls != null && detail.Balls != 0)
            {
                double? strikerate = (detail?.Runs / (double) detail?.Balls) * 100;
                sr = strikerate != null ? $"{strikerate,12:F2}" : "-";
            }

            var name = Model.ShowTeamInList ? $"{detail.Name} ({detail.Team})" : detail.Name;
//            var detailGroundName = detail.Ground.Length < maxLength ? detail.Ground : detail.Ground.Substring(0, 20) + "...";
            name = name.Length < maxLength ? name : name.Substring(0, 20) + "...";
            
            <tr>
                <td class="text-left" nowrap="nowrap">@name</td>
                <td class="text-right" nowrap="nowrap">@detail.Matches</td>
                <td class="text-right" nowrap="nowrap">@(detail.Innings == null ? "-" : detail.Innings)</td>
                <td class="text-right" nowrap="nowrap">@(detail.NotOuts == null ? "-" : detail.NotOuts)</td>
                <td class="text-right" width="100">@(detail.Runs == null ? "-" : detail.Runs)</td>
                <td class="text-right" nowrap="nowrap">
                    @Html.Raw(hs)
                </td>
                <td class="text-right" nowrap="nowrap">@(detail.Avg == null ? "-" : $"{detail.Avg,12:F2}")</td>
                <td class="text-right" nowrap="nowrap">@(detail.Hundreds == 0 || detail.Hundreds == null ? "-" : @detail.Hundreds)</td>
                <td class="text-right" nowrap="nowrap">@(detail.Fifties == 0 || detail.Fifties == null ? "-" : @detail.Fifties)</td>
                <td class="text-right" nowrap="nowrap">@(detail.Ducks == null || detail.Ducks == 0 ? "-" : @detail.Ducks)</td>
                <td class="text-right" nowrap="nowrap">@(detail.Fours == null || detail.Fours == 0 ? "-" : @detail.Fours)</td>
                <td class="text-right" nowrap="nowrap">@(detail.Sixes == null || detail.Sixes == 0 ? "-" : @detail.Sixes)</td>
                <td class="text-right" nowrap="nowrap">@(detail.Balls == null || detail.Balls == 0 ? "-" : @detail.Balls)</td>
                <td class="text-right" nowrap="nowrap">@sr</td>
            </tr>
        }
        </tbody>
    </table>
}