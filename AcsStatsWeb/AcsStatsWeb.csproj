<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFramework>net6.0</TargetFramework>
        <Nullable>enable</Nullable>
        <IsPackable>false</IsPackable>
        <SpaRoot>ClientApp\</SpaRoot>
        <SpaProxyServerUrl>https://localhost:44410</SpaProxyServerUrl>
        <SpaProxyLaunchCommand>npm start</SpaProxyLaunchCommand>
        <ImplicitUsings>enable</ImplicitUsings>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="IdentityModel" Version="6.0.0" />
        <PackageReference Include="MediatR" Version="10.0.1" />
        <PackageReference Include="MediatR.Extensions.Microsoft.DependencyInjection" Version="10.0.1" />
        <PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="6.0.5" />
        <PackageReference Include="Microsoft.AspNetCore.Authentication.OpenIdConnect" Version="6.0.5" />
        <PackageReference Include="Microsoft.AspNetCore.SpaProxy" Version="6.0.2" />
        <PackageReference Include="Serilog.AspNetCore" Version="5.0.0" />
        <PackageReference Include="Serilog.Extensions.Hosting" Version="4.2.0" />
        <PackageReference Include="Serilog.Sinks.Console" Version="4.0.1" />
        <PackageReference Include="Serilog.Sinks.RollingFile" Version="3.3.0" />
        <PackageReference Include="Swashbuckle.AspNetCore" Version="6.3.1" />
    </ItemGroup>

    <ItemGroup>
        <!-- Don't publish the SPA source files, but do show them in the project files list -->
        <Content Remove="$(SpaRoot)**" />
        <None Remove="$(SpaRoot)**" />
        <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
    </ItemGroup>

    <ItemGroup>
      <ProjectReference Include="..\AcsRepository\AcsRepository.csproj" />
      <ProjectReference Include="..\Services\Services.csproj" />
    </ItemGroup>

    <ItemGroup>
      <Compile Update="Controllers\BattingRecordsController.cs">
        <Generator>MSBuild:GenerateCodeFromAttributes</Generator>
      </Compile>
      <Compile Update="Controllers\BowlingRecordsController.cs">
        <Generator>MSBuild:GenerateCodeFromAttributes</Generator>
      </Compile>
      <Compile Update="Controllers\CountriesController.cs">
        <Generator>MSBuild:GenerateCodeFromAttributes</Generator>
      </Compile>
      <Compile Update="Controllers\FieldingRecordsController.cs">
        <Generator>MSBuild:GenerateCodeFromAttributes</Generator>
      </Compile>
      <Compile Update="Controllers\GroundsController.cs">
        <Generator>MSBuild:GenerateCodeFromAttributes</Generator>
      </Compile>
      <Compile Update="Controllers\MatchesController.cs">
        <Generator>MSBuild:GenerateCodeFromAttributes</Generator>
      </Compile>
      <Compile Update="Controllers\PartnershipRecordsController.cs">
        <Generator>MSBuild:GenerateCodeFromAttributes</Generator>
      </Compile>
      <Compile Update="Controllers\TeamRecordsController.cs">
        <Generator>MSBuild:GenerateCodeFromAttributes</Generator>
      </Compile>
      <Compile Update="Controllers\TeamsController.cs">
        <Generator>MSBuild:GenerateCodeFromAttributes</Generator>
      </Compile>
      <Compile Update="Controllers\RecordsController.cs">
        <Generator>MSBuild:GenerateCodeFromAttributes</Generator>
      </Compile>
    </ItemGroup>

    <ItemGroup>
      <Folder Include="ClientApp\src\app\core" />
      <Folder Include="ClientApp\src\app\directives" />
      <Folder Include="ClientApp\src\app\features\search" />
      <Folder Include="ClientApp\src\app\guards" />
      <Folder Include="ClientApp\src\app\helpers" />
      <Folder Include="ClientApp\src\app\interceptors" />
      <Folder Include="ClientApp\src\app\modules\batting-records\components" />
      <Folder Include="ClientApp\src\app\pipes" />
    </ItemGroup>

    <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
        <!-- Ensure Node.js is installed -->
        <Exec Command="node --version" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
        </Exec>
        <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
        <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    </Target>

    <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
        <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build --prod" />

        <!-- Include the newly-built files in the publish output -->
        <ItemGroup>
            <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
            <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
                <RelativePath>wwwroot\%(RecursiveDir)%(FileName)%(Extension)</RelativePath>
                <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
                <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
            </ResolvedFileToPublish>
        </ItemGroup>
    </Target>
</Project>
